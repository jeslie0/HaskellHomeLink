syntax="proto3";

package proto;

// * Data types

enum ISLAND {
  HOME = 0;
  LOCAL_HTTP = 1;
  REMOTE_PROXY = 2;
  UNKNOWN = 3;
}

enum STREAM {
  CLASSIC_FM = 0;
  CLASSIC_FM_CALM = 1;
  CLASSIC_FM_MOVIES = 2;
  RADIO_X_CLASSIC_ROCK = 3;
  LBC = 4;
  UNKNOWN_STREAM = 5;
}

message CPUData {
  string vendor = 1;
  string modelName = 2;
}

message SystemData {
  CPUData cpuData = 1;
  bool inDockerContainer = 2;
  string operatingSystemName = 3;
  string architecture = 4;
}

message IslandSystemData {
  ISLAND island = 1;
  SystemData systemData = 2;
}

message IslandsSystemData {
  repeated IslandSystemData allSystemData = 1;
}

// * Home Received Msgs

message StartRadio {
  string url = 1;
  STREAM newStream = 3;
}

message StopRadio {
}

message ConnectTCP {
  string host = 1;
  string port = 2;
}

message HomeEnvelope {
  oneof payload {
    StartRadio m1 = 1;
    StopRadio m2 = 2;
    ConnectTCP m3 = 3;
    SystemData m4 = 4;
  }
}

// * Proxy Received Msgs

// Received from HTTP Server.
message ModifyRadioRequest {
  bool start = 1;
  string url = 2;
  STREAM newStream = 3;
}

// Sent to HTTP Server
message ModifyRadioResponse {
  optional STREAM newStream = 1;
}

// Received from HTTP Server.
message GetRadioStatusRequest {

}

// Sent to HTTP Server
message GetRadioStatusResponse {
  int32 stateId = 1;
  optional STREAM currentStream = 2;
}

message ProxyEnvelope {
  oneof payload {
    ModifyRadioResponse m1 = 1;
    GetRadioStatusResponse m2 = 2;
    IslandSystemData m3 = 3;
  }
}
