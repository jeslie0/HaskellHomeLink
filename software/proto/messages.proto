syntax="proto3";

package proto;

// * Data types

enum ISLAND {
  HOME = 0;
  LOCAL_HTTP = 1;
  REMOTE_PROXY = 2;
  UNKNOWN = 3;
}

enum STREAM_STATUS {
  OFF = 0;
  INITIATED = 1;
  PLAYING = 2;
}

message CPUData {
  string vendor = 1;
  string modelName = 2;
}

message SystemData {
  CPUData cpuData = 1;
  bool inDockerContainer = 2;
  string operatingSystemName = 3;
  string architecture = 4;
  uint32 memTotalkB = 5;
}

message IslandSystemData {
  ISLAND island = 1;
  SystemData systemData = 2;
}

message IslandsSystemData {
  repeated IslandSystemData allSystemData = 1;
}

message RadioStation {
  string url = 1;
  uint32 id = 2;
}

// Received from HTTP Server.
message ModifyRadioRequest {
  optional RadioStation station = 1;
}

message RadioStatusUpdate {
  STREAM_STATUS status = 1;
  uint32 currentStationId = 2;
}

message MemoryInformation {
  uint32 systemTime = 1;
  uint32 memUsed = 2;
}

message IslandMemoryInformation {
  ISLAND island = 1;
  MemoryInformation memInfo = 2;
}

message AllIslandMemoryData {
  repeated IslandMemoryInformation allIslandMemoryData = 1;
}

// * Home Received Msgs

message ConnectTCP {
  string host = 1;
  string port = 2;
}

message HomeEnvelope {
  oneof payload {
    ModifyRadioRequest m1 = 1;
    ConnectTCP m2 = 2;
    SystemData m3 = 3;
  }
}

// * Proxy Received Msgs

// Received from HTTP Server.
message GetRadioStatusRequest {

}

// Sent to HTTP Server
message GetRadioStatusResponse {
  int32 stateId = 1;
  STREAM_STATUS status = 2;
  uint32 currentStationId = 3;
}

message ProxyEnvelope {
  oneof payload {
    RadioStatusUpdate m1 = 1;
    GetRadioStatusResponse m2 = 2;
    IslandSystemData m3 = 3;
  }
}
